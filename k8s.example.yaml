---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spnego-auth
data:
  nginx.conf: |
    server {
      listen 80;
      access_log /dev/stdout;
      error_log /var/log/nginx/error.log debug;

      location / {

        ssi on; #just for testing. Disable for production.

        root /var/www/html;
        index index.html;
        auth_gss on;
        auth_gss_keytab /etc/nginx/nginx.keytab;
        add_header X-Authenticated-User $remote_user always;

      }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: spnego-keytab
data:
  http-headers.keytab: >-
    <base64_keytab>
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spnego-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spnego-auth
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: spnego-auth
    spec:
      volumes:
        - name: keytab
          secret:
            secretName: spnego-keytab
            defaultMode: 420
        - name: nginx-config
          configMap:
            name: spnego-auth
            defaultMode: 420
      containers:
        - name: nginx
          image: suprematic/nginx-spnego:latest
          volumeMounts:
            - name: keytab
              readOnly: true
              mountPath: /etc/nginx/nginx.keytab
              subPath: http-headers.keytab
            - name: nginx-config
              readOnly: true
              mountPath: /etc/nginx/sites-available/default
              subPath: nginx.conf
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 33
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  name: spnego-auth
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: spnego-auth
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-com
  annotations:
    nginx.ingress.kubernetes.io/auth-response-headers: X-Authenticated-User
    nginx.ingress.kubernetes.io/auth-url: http://spnego-auth.default.svc.cluster.local/
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - test.example.com
      secretName: test-example-com-tls
  rules:
    - host: test.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: example-com
                port:
                  number: 8080
